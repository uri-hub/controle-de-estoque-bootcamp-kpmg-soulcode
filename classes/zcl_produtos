CLASS ZEQP3_CL_PRODUTO DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    CLASS-DATA: PROD_ID     TYPE NUMC5,
                DESC        TYPE CHAR100,
                PRECO       TYPE P,
                QTD         TYPE NUMC3,
                CATEGORIA   TYPE NUMC3,
                LV_RESPOSTA TYPE SY-UCOMM,
                COLUMNS     TYPE REF TO CL_SALV_COLUMNS_TABLE,
                COLUMN      TYPE REF TO CL_SALV_COLUMN.

    METHODS:
      CONSTRUCTOR IMPORTING P_PROD_ID   TYPE NUMC5
                            P_DESC      TYPE CHAR100
                            P_PRECO     TYPE P
                            P_QTD       TYPE NUMC3
                            P_CATEGORIA TYPE NUMC3,

      CRIAR_PRODUTO IMPORTING LV_PROD_ID   TYPE NUMC5
                              LV_DESC      TYPE CHAR100
                              LV_PRECO     TYPE P
                              LV_QTD       TYPE NUMC3
                              LV_CATEGORIA TYPE NUMC3,

      ATUALIZAR_PRODUTO IMPORTING LV_PROD_ID   TYPE NUMC5
                                  LV_DESC      TYPE CHAR100
                                  LV_PRECO     TYPE P
                                  LV_QTD       TYPE NUMC3
                                  LV_CATEGORIA TYPE NUMC3,

      DELETAR_PRODUTO IMPORTING LV_PROD_ID TYPE NUMC5,

      LISTAR_PRODUTOS.

  PROTECTED SECTION.

CLASS ZEQP3_CL_PRODUTO IMPLEMENTATION.


    SELECT SINGLE *
      FROM ZEQ3_TB_PRODUTOS
      INTO @DATA(GS_PRODUTOS)
      WHERE PROD_ID = @LV_PROD_ID.

    IF GS_PRODUTOS IS NOT INITIAL.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR       = 'Confirma  o'
          TEXT_QUESTION  = | Atualizar o cadastro para este produto ? |
          DEFAULT_BUTTON = '1'
        IMPORTING
          ANSWER         = LV_RESPOSTA.

      IF LV_RESPOSTA = 1.

        IF LV_DESC IS NOT INITIAL AND LV_DESC NE ''.
          UPDATE ZEQ3_TB_PRODUTOS
            SET DESCR = LV_DESC
            WHERE PROD_ID EQ GS_PRODUTOS-PROD_ID.
        ENDIF.
        IF LV_PRECO IS NOT INITIAL.
          UPDATE ZEQ3_TB_PRODUTOS
            SET PRECO = LV_PRECO
            WHERE PROD_ID EQ GS_PRODUTOS-PROD_ID.

        ENDIF.
        IF LV_QTD IS NOT INITIAL.
          UPDATE ZEQ3_TB_PRODUTOS
          SET QTD = LV_QTD
          WHERE PROD_ID EQ GS_PRODUTOS-PROD_ID.

        ENDIF.
        IF LV_CATEGORIA IS NOT INITIAL AND LV_CATEGORIA NE ' ' AND LV_CATEGORIA BETWEEN 101 AND 108.
          UPDATE ZEQ3_TB_PRODUTOS
          SET CATEGORIA = LV_CATEGORIA
          WHERE PROD_ID EQ GS_PRODUTOS-PROD_ID.
        ENDIF.

        IF SY-SUBRC = 0.
          COMMIT WORK.
          MESSAGE S008(ZEQP3_MSG) WITH GS_PRODUTOS-DESCR DISPLAY LIKE 'I'.
        ENDIF.

      ELSE.
        MESSAGE E010(ZEQP3_MSG) WITH GS_PRODUTOS-DESCR DISPLAY LIKE 'I'.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD CONSTRUCTOR.
    ME->PROD_ID = P_PROD_ID.
    ME->DESC = P_DESC.
    ME->PRECO = P_PRECO.
    ME->QTD = P_QTD.
    ME->CATEGORIA = P_CATEGORIA.
  ENDMETHOD.


  METHOD CRIAR_PRODUTO.
    SELECT SINGLE *
      FROM ZEQ3_TB_PRODUTOS
      INTO @DATA(GS_PRODUTOS)
      WHERE PROD_ID = @LV_PROD_ID
      AND DESCR = @LV_DESC
      AND PRECO = @LV_PRECO
      AND QTD = @LV_QTD
      AND CATEGORIA = @LV_CATEGORIA.


    IF GS_PRODUTOS IS INITIAL.
      GS_PRODUTOS-PROD_ID = LV_PROD_ID.
      GS_PRODUTOS-DESCR = LV_DESC.
      GS_PRODUTOS-PRECO = LV_PRECO.
      GS_PRODUTOS-QTD = LV_QTD.
      GS_PRODUTOS-CATEGORIA = LV_CATEGORIA.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR       = 'Confirma  o'
          TEXT_QUESTION  = | Cadastrar o produto { LV_DESC } ? |
          DEFAULT_BUTTON = '1'
        IMPORTING
          ANSWER         = LV_RESPOSTA.

      IF LV_RESPOSTA = '1' .
        INSERT INTO ZEQ3_TB_PRODUTOS VALUES GS_PRODUTOS.

        IF SY-SUBRC EQ 0.
          COMMIT WORK.
          MESSAGE S006(ZEQP3_MSG) WITH GS_PRODUTOS-DESCR DISPLAY LIKE 'I'.
        ENDIF.
      ELSE.
        MESSAGE E007(ZEQP3_MSG) WITH GS_PRODUTOS-DESCR DISPLAY LIKE 'I'.
      ENDIF.
      CLEAR GS_PRODUTOS.

    ENDIF.
  ENDMETHOD.


  METHOD DELETAR_PRODUTO.
    SELECT SINGLE *
    FROM ZEQ3_TB_PRODUTOS
    INTO @DATA(GS_PRODUTOS)
    WHERE PROD_ID = @LV_PROD_ID.

    IF GS_PRODUTOS IS NOT INITIAL.
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR       = 'Confirma  o'
          TEXT_QUESTION  = | Deseja remover o produto { GS_PRODUTOS-DESCR } ? |
          DEFAULT_BUTTON = '1'
        IMPORTING
          ANSWER         = LV_RESPOSTA.

      IF LV_RESPOSTA = '1'.
        DELETE FROM ZEQ3_TB_PRODUTOS
        WHERE PROD_ID = GS_PRODUTOS-PROD_ID.

        IF SY-SUBRC EQ 0.
          COMMIT WORK.
          MESSAGE S011(ZEQP3_MSG) WITH LV_PROD_ID DISPLAY LIKE 'I'.
        ENDIF.

      ELSE.
        MESSAGE E012(ZEQP3_MSG) WITH GS_PRODUTOS-PROD_ID DISPLAY LIKE 'I'.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD LISTAR_PRODUTOS.
    TYPES: BEGIN OF TY_PROD.
          INCLUDE TYPE ZEQ3_TB_PRODUTOS.
        TYPES: COLOR TYPE LVC_T_SCOL,
      END OF TY_PROD.

    DATA: GT_PRODUTOS TYPE TABLE OF TY_PROD.

    SELECT *
         FROM ZEQ3_TB_PRODUTOS
         INTO CORRESPONDING FIELDS OF TABLE GT_PRODUTOS.

    IF GT_PRODUTOS IS NOT INITIAL.
      LOOP AT GT_PRODUTOS INTO DATA(LS_PROD).
        IF LS_PROD-QTD LE 10.
          LS_PROD-COLOR = VALUE #(  ( COLOR-COL = 6 COLOR-INT = 1 COLOR-INV = 0 ) ).
          MODIFY GT_PRODUTOS FROM LS_PROD.

        ELSEIF LS_PROD-QTD GT 10 AND LS_PROD-QTD LE 30.
          LS_PROD-COLOR = VALUE #( ( COLOR-COL = 3 COLOR-INT = 1  COLOR-INV = 0 ) ).
          MODIFY GT_PRODUTOS FROM LS_PROD.

        ELSEIF LS_PROD-QTD GT 30.
          LS_PROD-COLOR = VALUE #( ( COLOR-COL = 5 COLOR-INT = 1 COLOR-INV = 0 ) ).
          MODIFY GT_PRODUTOS FROM LS_PROD.
        ENDIF.
      ENDLOOP.

      TRY.
          CALL METHOD CL_SALV_TABLE=>FACTORY(
            IMPORTING
              R_SALV_TABLE = DATA(LO_ALV)
            CHANGING
              T_TABLE      = GT_PRODUTOS ).

          LO_ALV->GET_FUNCTIONS( )->SET_ALL( ABAP_TRUE ).

          COLUMNS = LO_ALV->GET_COLUMNS( ).
          COLUMNS->SET_OPTIMIZE( ABAP_TRUE ).
          COLUMNS->SET_COLOR_COLUMN( 'COLOR' ).

          COLUMN = COLUMNS->GET_COLUMN( 'MANDT' ).
          COLUMN->SET_VISIBLE( ABAP_FALSE ).

          LO_ALV->DISPLAY( ).


        CATCH CX_SALV_MSG.
          MESSAGE E013(ZEQP3_MSG) DISPLAY LIKE 'I'.
      ENDTRY.
    ELSE.
      MESSAGE E014(ZEQP3_MSG) DISPLAY LIKE 'I'.
    ENDIF.
  ENDMETHOD.
ENDCLASS.

  PRIVATE SECTION.
ENDCLASS.


